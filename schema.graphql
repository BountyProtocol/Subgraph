#Interfaces

interface CTX {
  id: ID!
  name: String!
  type: String!
}

# [DEV] UNUSED
type CTXPost @entity {
  id: ID! # combination of ctx address and event transaction address
  entity: CTX!
  createdDate: BigInt
  author: Soul!
  entityRole: String!
  uri: String
  metadata: Bytes
}


#Entity: Account
type Account @entity {
  id: ID! # account address
  sbt: Soul!
}

#Entity: OpenRepo [WIP]
type OpenRepo @entity {
  id: ID! # contract address
  conf: [RelAddress!]
}

type RelAddress @entity {
  id: ID! # Unique Combo
  owner: String! # Address
  key: String!
  value: [String!]! # Addresses
}



#Entity: Hub [WIP]
type Hub @entity {
  id: ID! # Address
  OpenRepo: String! # Address
  conf: [HubConf!]
}
type HubConf @entity {
  id: ID! # 
}


#Separate Relations [DEV]
type GameRelAddress @entity {
  id: ID! # Unique Combo
  origin: Game! 
  key: String!
  value: [String!]! # Addresses
}
type ClaimRelAddress @entity {
  id: ID! # Unique Combo
  origin: Claim! 
  key: String!
  value: [String!]! # Addresses
}
type AccountRelAddress @entity {
  id: ID! # Unique Combo
  origin: Account! 
  key: String!
  value: [String!]! # Addresses
}


#Entity: Soul
type Soul @entity {
  id: ID! # Token ID 
  owner: String! # account address
  type: String! # type to determine that the entity is created by an account or contract
  # role: String # ?
  uri: String # metadata uri
  uriData: Bytes
  metadata: Bytes

  #DEPRECATE THESE
  uriImage: String!
  uriFirstName: String!
  uriLastName: String!

  name: String!
  tags: [String!]
  searchField: String
  participantGame: [GameParticipant!]! @derivedFrom(field: "sbt")
  participantProc: [ProcParticipant!]! @derivedFrom(field: "sbt")
  #reputation: [GameSoulOpinion!]! @derivedFrom(field: "sbt")
  opinion: [SoulSoulOpinion!]! @derivedFrom(field: "subject")
  opinionOn: [SoulSoulOpinion!]! @derivedFrom(field: "object")
  assoc: [Assoc!]! @derivedFrom(field: "aEnd")
}

#Reputation (SBT Opinions on SBT) [DEV]
type SoulSoulOpinion @entity {
  id: ID! # combination of subject, object, and domain name
  subject: Soul!
  object: Soul!
  domain: String!
  negativeRating: BigInt!
  positiveRating: BigInt!
}

#Entity: Game
type Game implements CTX @entity {
  id: ID! # contract address
  hub: String! # hub address
  name: String!
  type: String!
  uri: String # metadata uri
  uriData: Bytes
  metadata: Bytes
  createdDate: BigInt!
  nominations: [GameNomination!]! @derivedFrom(field: "game")
  posts: [GamePost!]! @derivedFrom(field: "entity")

  #Relations to Souls (Parts / Members)
  roles: [GameRole!]! @derivedFrom(field: "game")
  parts: [GameParticipant!]! @derivedFrom(field: "entity")
  assoc: [GameAssoc!]! @derivedFrom(field: "bEnt")
}

type GameRole @entity {
  id: ID! # combination of game address and role id
  game: Game!
  roleId: BigInt!
  name: String!
  souls: [String!]!
  soulsCount: Int!
}

#Entity: Rule
type GameRule @entity {
  id: ID! # combination of game address and role id
  game: Game!
  about: Action!
  aboutSubject: String
  ruleId: BigInt!
  affected: String
  uri: String
  uriData: Bytes
  metadata: Bytes
  uriName: String
  negation: Boolean
  effects: [GameRuleEffect!]!
  effectsBlock: BigInt # number of block where effects were defined
  confirmationRuling: String
  confirmationEvidence: Boolean
  confirmationWitness: BigInt
  isPositive: Boolean
  isDisabled: Boolean!
}

type GameRuleEffect @entity {
  id: ID! # combination of game address, rule id, effect name
  rule: GameRule!
  name: String!
  direction: Boolean!
  value: Int!
}

type GameNomination @entity {
  id: ID! # combination of game address and event transaction address
  game: Game!
  createdDate: BigInt!
  nominator: Soul!
  nominated: Soul!
}

type GamePost @entity {
  id: ID! # combination of game address and event transaction address
  entity: Game!
  createdDate: BigInt
  author: Soul!
  entityRole: String!
  uri: String
  metadata: Bytes
}

#Entity: Action
type Action @entity {
  id: ID! # guid
  subject: String
  verb: String
  object: String
  tool: String
  uri: String
  uriData: Bytes
  metadata: Bytes
  rules: [GameRule!]! @derivedFrom(field: "about")
}

#Entity: Claim/Task/Process
type Claim implements CTX @entity {
  id: ID! # contract address
  hub: String # hub address
  name: String!
  game: Game
  type: String!
  uri: String # metadata uri
  uriData: Bytes
  metadata: Bytes
  stage: Int!
  createdDate: BigInt!
  updatedDate: BigInt
  nominations: [ClaimNomination!]! @derivedFrom(field: "claim")
  posts: [ClaimPost!]! @derivedFrom(field: "entity")
  stageURI: [ClaimStageURI!]! @derivedFrom(field: "entity")
  
  #Relations to Souls (Parts / Members)
  roles: [ClaimRole!]! @derivedFrom(field: "claim")
  parts: [ProcParticipant!]! @derivedFrom(field: "entity")
  assoc: [ProcAssoc!]! @derivedFrom(field: "bEnt")
}

type ClaimStageURI @entity { # [DEV]
  id: ID! # combination of claim address and stage name
  entity: Claim!
  stage: Int!
  uri: String!
  Author: String # SBT
}

type ClaimRole @entity { # DEPRECATE
  id: ID! # combination of claim address and role id
  claim: Claim!
  name: String!
  roleId: BigInt!
  souls: [String!]!
  soulsCount: Int!
}

type ClaimNomination @entity {
  id: ID! # combination of claim address and event transaction address
  claim: Claim!
  createdDate: BigInt!
  nominator: Soul!
  nominated: Soul!
}

type ClaimPost @entity {
  id: ID! # combination of claim address and event transaction address
  entity: Claim!
  createdDate: BigInt
  author: Soul!
  entityRole: String
  uri: String
  metadata: Bytes
}

#[WIP]
type GameParticipant @entity {
  id: ID! 
  entity: Game!
  sbt: Soul!
  roles: [String!]!
}
type ProcParticipant @entity {
  id: ID! 
  entity: Claim!
  sbt: Soul!
  roles: [String!]!
}

type GameAssoc @entity {
  id: ID! # combination of claim address and SBT & roleId address
  bEnt: Game! # Group
  sbt: Soul! # Entity
  role: BigInt!
  qty: BigInt!
}
type ProcAssoc @entity {
  id: ID! # combination of claim address and SBT & roleId address
  bEnt: Claim! # Group
  sbt: Soul! # Entity
  role: BigInt!
  qty: BigInt!
}

type Assoc @entity {
  id: ID! # combination of claim address and SBT & roleId address
  aEnd: Soul!
  bEnd: Soul!
  role: BigInt!
  qty: BigInt! # Influence
}